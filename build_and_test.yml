stages:

- stage: Data

  jobs:
  - job: Get_Data_Files_for_Properties_Tests

    pool:
      'vmImage': 'ubuntu-latest'

    variables: 
    - group: InternalKeys
      
    steps:
    
    - bash: |
        wget "https://distributor.51degrees.com/api/v2/download?LicenseKeys=$(DeviceDetectionLicenseKey)&Type=21&Download=True&Product=23" -O "$(Build.SourcesDirectory)/51Degrees-Tac.zip"
      displayName: 'Download TAC V4 CSV data file'

    - task: Bash@3
      displayName: 'Extract TAC V4 CSV data file'
      inputs:
        targetType: 'inline'
        script: 'unzip -p $(Build.SourcesDirectory)/51Degrees-Tac.zip 51Degrees-Tac-All.csv > $(Build.SourcesDirectory)/51Degrees.csv'
        workingDirectory: '$(Build.SourcesDirectory)'

    - script: |    
          mv $(Build.SourcesDirectory)/51Degrees.csv $(Build.ArtifactStagingDirectory)/51Degrees.csv
      displayName: 'Move Data Files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'dataFiles'
        publishLocation: 'Container'

- stage: Mac_Windows_Linux
  dependsOn: [Data]
  jobs: 
  - job: 'Build_and_Test'
     
    strategy:
      matrix:
        linux_x64:
          imageName: 'ubuntu-latest'
          pythonVersion: '3.6'
          architecture: x64
        macos_x64:
          imageName: 'macOS-latest'
          pythonVersion: '3.9'
          architecture: x64
        windows_x64:
          imageName: 'windows-latest'
          pythonVersion: '3.6'
          architecture: x64
        windows_x86:
          imageName: 'windows-latest'
          pythonVersion: '3.6'
          architecture: x86

    variables: 
      - group: InternalKeys

    pool:
      'vmImage': '$(imageName)'
        
    steps:
    - checkout: self
      lfs: true
      submodules: recursive      
      
    - task: UsePythonVersion@0
      inputs:
       versionSpec: $(pythonVersion)
       architecture: $(architecture)
       addToPath: True
      displayName: 'Use Python $(pythonVersion)-x64'

    - task: DownloadBuildArtifacts@0
      displayName: 'Download Data Files'
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'dataFiles'
        downloadPath: '$(System.ArtifactsDirectory)'

    - script: |   
          mv $(System.ArtifactsDirectory)/dataFiles/51Degrees.csv  $(Build.SourcesDirectory)/fiftyone_devicedetection_cloud/tests
      displayName: 'Move Data Files'

    - script: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements.txt
        python -m pip install pylint
        python -m pip install unittest-xml-reporting
        python -m pip install coverage
        python -m pip install certifi
        python -m pip install requests
        python -m pip install cachetools
        python -m pip install chevron
        python -m pip install jsmin
        python -m pip install Cython
      displayName: 'Install dependencies'

    - script: |
        python -m pip install --index-url https://test.pypi.org/simple/ fiftyone_pipeline_cloudrequestengine==4.2.0rc3
        python -m pip install --index-url https://test.pypi.org/simple/ fiftyone_pipeline_core==4.2.0rc3
        python -m pip install --index-url https://test.pypi.org/simple/ fiftyone_pipeline_engines==4.2.0rc3
        python -m pip install --index-url https://test.pypi.org/simple/ fiftyone_pipeline_engines_fiftyone==4.2.0rc3
      displayName: 'Install Pipeline Dependencies'

    - script: |
        cd ./fiftyone_devicedetection_onpremise
        python setup.py build_clib build_ext --inplace
      displayName: 'Install Python Extension'

    - script: |
        python -m pip install ./fiftyone_devicedetection_shared
        python -m pip install ./fiftyone_devicedetection_cloud
        python -m pip install ./fiftyone_devicedetection_onpremise
        python -m pip install ./fiftyone_devicedetection
      displayName: 'Install Device Detection Packages'

    - script: |
        cd ./fiftyone_devicedetection_shared
        pylint --rcfile=.pylintrc ./fiftyone_devicedetection_shared
        
        cd ../fiftyone_devicedetection_cloud
        pylint --rcfile=.pylintrc ./fiftyone_devicedetection_cloud
        
        cd ../fiftyone_devicedetection_onpremise
        pylint --rcfile=.pylintrc ./fiftyone_devicedetection_onpremise
        
        cd ../fiftyone_devicedetection
        pylint --rcfile=.pylintrc ./fiftyone_devicedetection   
      displayName: 'Analyze Python Code Using Pylint'

    - bash: |
        echo "Resource key for cloud testing = $(SuperResourceKey)"
        export resource_key="$(SuperResourceKey)"      
        export run_performance_tests=true
        export FOD_CLOUD_API_URL="$(FOD_CLOUD_API_URL)"

        cd ./fiftyone_devicedetection_cloud
        python -m coverage run -m xmlrunner discover -s tests -p test*.py -o test-results
        python -m coverage xml

        cd ../fiftyone_devicedetection_onpremise
        python -m coverage run -m xmlrunner discover -s tests -p test*.py -o test-results
        python -m coverage xml
      displayName: 'Run Tests'

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/test-results/**'
        testRunTitle: 'Publish test results for Python $(pythonVersion)'
        searchFolder: '$(System.DefaultWorkingDirectory)'
        mergeTestResults: false
        failTaskOnFailedTests: true

    - task: PublishCodeCoverageResults@1
      inputs:
       codeCoverageTool: Cobertura
       summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
       reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'